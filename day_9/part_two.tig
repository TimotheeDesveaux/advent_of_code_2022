let
    import "common.tih"

    function part_two() : int =
        let
            type rope = array of point

            function move_rope(rope: rope, dir: string) =
            (
                if dir = "U" then
                    rope[0].y := rope[0].y - 1
                else if dir = "D" then
                    rope[0].y := rope[0].y + 1
                else if dir = "L" then
                    rope[0].x := rope[0].x - 1
                else if dir = "R" then
                    rope[0].x := rope[0].x + 1;

                for i := 1 to 9 do
                (
                    if abs(rope[i - 1].x - rope[i].x) > 1
                       | abs(rope[i - 1].y - rope[i].y) > 1 then
                    (
                        rope[i].x := rope[i].x + normalize(rope[i - 1].x - rope[i].x);
                        rope[i].y := rope[i].y + normalize(rope[i - 1].y - rope[i].y)
                    )
                )
            )

            var dir := getchar()
            var discard := getchar()
            var steps := get_int()

            var rope := rope [10] of nil
            var set := point_set { size = 0, points = nil }
        in
            for i := 0 to 9 do
                rope[i] := point { x = 0, y = 0 };

            while dir <> "" do
            (
                for i := 1 to steps do
                (
                    move_rope(rope, dir);
                    insert_point(set, rope[9])
                );

                dir := getchar();
                discard := getchar();
                steps := get_int()
            );

            set.size
        end
in
    print("part two: ");
    print_int(part_two());
    print("\n")
end
